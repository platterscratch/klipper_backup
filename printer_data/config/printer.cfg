#
# Elegoo Neptune 3 Plus Klipper Configuration
#
# Original content from user's printer.cfg
#
# For the ZNP Robin Nano DW v2.2 board:
#   - Compile with the processor model STM32F401.
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART1 PA10/PA9) for the communication interface.
#   - Select (Serial (on # USART2 PA3/PA2) if you want to use the serial UART pins on J17 (wifi section)
# Note that the "make flash" command does not work with ZNP Robin boards. After running "make", run the following command:
# cp out/klipper.bin out/ZNP_ROBIN_NANO.bin
#
# Copy the file out/ZNP_ROBIN_NANO.bin to an SD card and then restart the printer with that SD card.
# See docs/Config_Reference.md for a description of parameters.

#[include timelapse.cfg]

[include adxlmcu.cfg]
[include adxlmacros.cfg]

[exclude_object]
[include KAMP_Settings.cfg]

[virtual_sdcard]
path: /home/klipper/printer_data/gcodes

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
baud: 250000

[pause_resume]

[display_status]

[include pause_resume_cancel.cfg]
[include testing.cfg]
[include main_macro.cfg]
[include accessibility.cfg]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %} 
    RESUME_BASE {get_params}

[gcode_macro CALIBRATE_Z_OFFSET]
description: "Automated Z Offset Calibration Routine"
gcode:
    {% set x = 150 %}
    {% set y = 150 %}
    {% set z_hop = 10 %}
    {% set z_hop_speed = 5 %}

    # Reset probe and allow negative Z movement
    BLTOUCH_RESET
    SET_GCODE_OFFSET Z=0
    SET_POSITION_MIN Z=-4

    # Home all axes
    G28

    # Move to center and hop up
    G90
    G1 X{x} Y{y} F6000
    G1 Z{z_hop} F{z_hop_speed * 60}

    # Begin probe calibration
    PROBE_CALIBRATE

[gcode_macro PA_TOWER]
description: Prints a Pressure Advance tower
gcode:
    {% set start = params.START|default(0.00)|float %}
    {% set end = params.END|default(0.10)|float %}
    {% set step = params.STEP|default(0.02)|float %}
    {% set height = params.HEIGHT|default(40)|int %}
    {% set layer_h = params.LAYER_H|default(0.2)|float %}
    {% set tower_w = params.WIDTH|default(20)|int %}
    {% set tower_d = params.DEPTH|default(20)|int %}
    {% set speed = params.SPEED|default(60)|int %}

    {% set steps = ((end - start) / step)|int + 1 %}
    {% set layers_per_step = (height / steps / layer_h)|int %}

    M117 PA Tower {start} to {end}

    G90
    G28
    G1 Z0.2 F300
    G1 X10 Y10 F3000

    {% set pa = start %}
    {% for s in range(steps) %}
        M117 PA={pa|round(3)}
        SET_PRESSURE_ADVANCE ADVANCE={pa|round(3)}

        {% for l in range(layers_per_step) %}
            G1 X10 Y10 Z{(s*layers_per_step + l)*layer_h + 0.2} F600
            G1 X{10+tower_w} Y10 F{speed*60}
            G1 X{10+tower_w} Y{10+tower_d} F{speed*60}
            G1 X10 Y{10+tower_d} F{speed*60}
            G1 X10 Y10 F{speed*60}
        {% endfor %}

        {% set pa = pa + step %}
    {% endfor %}

    M117 Tower done. Pick best layer and run SAVE_PA VALUE=xxx

[gcode_macro SAVE_PA]
description: Save chosen Pressure Advance value
gcode:
    {% set value = params.VALUE|float %}
    SET_PRESSURE_ADVANCE ADVANCE={value}
    SAVE_CONFIG
    M117 Saved PA = {value}
    
[mcu]
serial: /dev/ttyUSB0
restart_method: command

[led LED_Light]
white_pin: PB9
initial_white: 1.0

#[output_pin LED_Light] #toggle for LED Light - use this instead of [LED] for sonic pad
#Pin: PB9
#cycle_time: 0.01
#pwm: true
#value: 1

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5
# Use those higher values just to configure Input Shaper 
#max_accel: 10000
#max_accel_to_decel: 10000

[stepper_x]
step_pin: !PC12
dir_pin: PB3
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: PA13
position_endstop: -6.0
position_min: -8.3
position_max: 330
homing_speed: 50

[stepper_y]
step_pin: PC11
dir_pin: PA15
enable_pin: !PC10
microsteps: 16
rotation_distance: 40
endstop_pin: PB8
position_endstop: 0
position_min: -1.3
position_max: 330
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: !PC9
enable_pin: !PC8
rotation_distance: 8
microsteps: 16
position_min: -4
position_max: 410
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
homing_speed: 5.0


[extruder]
max_extrude_only_distance: 101.0
step_pin: PB10
dir_pin: PB1
enable_pin: !PC6
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 250
max_extrude_cross_section: 10 
# Calibrate E-Steps https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
rotation_distance: 8.0189
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#   - Example: PID_CALIBRATE HEATER=extruder TARGET=200
#control = pid
#pid_kp = 30.356
#pid_ki = 1.857
#pid_kd = 124.081
# Calibrate PA: https://www.klipper3d.org/Pressure_Advance.html
pressure_advance = 0.600

[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pwm_cycle_time: 0.020 # set to 0.0166 if your grid runs on 60Hz to fix lights flickering
max_temp: 110
min_temp: 0
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#   - Example: PID_CALIBRATE HEATER=heater_bed TARGET=60
#control = pid
#pid_kp = 64.230
#pid_ki = 0.723
#pid_kd = 1425.905

[heater_fan hotend_fan]
pin: PB0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA7
max_power: 0.50  # Limit fan speed to 75% to prevent overcooling

[force_move]
enable_force_move: True

[safe_z_home]
home_xy_position: 160, 160
z_hop: 10

[probe]
pin: ^PA8
speed: 5
lift_speed: 15
samples: 1
x_offset: -28.5
y_offset: 22
# Calibrate probe: https://www.klipper3d.org/Bed_Level.html
# - Example: PROBE_CALIBRATE, then adjust with TESTZ Z=+/-X
#z_offset = 5.0

[safe_z_home]
home_xy_position: 160, 160
z_hop: 10

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: PB4

[bed_mesh]
speed: 200
horizontal_move_z: 25
mesh_min: 22,22
mesh_max: 290,315
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
algorithm: bicubic

[screws_tilt_adjust]
screw1: 66, 10.5
screw1_name: left front screw
screw2: 66, 143
screw2_name: left middle screw
screw3: 66, 270.5
screw3_name: left back screw
screw4: 321, 10.5
screw4_name: right front screw
screw5: 321, 143
screw5_name: right middle screw
screw6: 321, 270.5
screw6_name: right back screw

[input_shaper]
# Calibrate IS: https://www.klipper3d.org/Resonance_Compensation.html
#shaper_type_y = mzv
#shaper_freq_y = 38.2
#shaper_type_x = ei
#shaper_freq_x = 79.6

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

# M420 and G29 have been commented out as they conflict with the new start G-code
# The new slicer G-code with KAMP handles bed meshing automatically.
#[gcode_macro M420]
#description: Load the current mesh
#gcode:
#    BED_MESH_PROFILE LOAD=default
#    
#[gcode_macro G29]
#description: creates automated homing and bed mesh
#gcode:
#    G28
#    BED_MESH_CALIBRATE
#    DATA_SAVE

[gcode_macro TEST_PIN]
gcode:
    {% set pin_state = printer["gpio PA8"].value %}
    {action_respond_info("Pin PA8 state: " + pin_state)}

[include moonraker_obico_macros.cfg]

[firmware_retraction]
retract_length: 0.5
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 35

#
# -----[ START OF CUSTOM MACROS ]-----
# These macros were created specifically for your printer.cfg file.
# You can easily find, edit, or comment out this section if needed.

[gcode_macro SMART_PARK]
description: Parks the toolhead at a safe location near the front of the bed.
gcode:
    G90                                   ; Use absolute positioning
    G0 Z10 F600                           ; Lift to Z=10mm
    G0 X10 Y10 F3000                      ; Park at X10 Y10 (adjust if needed)

# The KAMP macros (BED_MESH_CALIBRATE ADAPTIVE=1 and LINE_PURGE) are handled
# by the included `KAMP_Settings.cfg` file you already have.
# If KAMP is not working, please ensure the KAMP files are correctly installed
# and the `[include KAMP_Settings.cfg]` line is correct.

#
# -----[ END OF CUSTOM MACROS ]-----
#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.490
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.295000, -0.152500, -0.022500, 0.022500, 0.030000, -0.075000, -0.232500
#*# 	-0.275000, -0.132500, 0.007500, 0.082500, 0.087500, -0.025000, -0.195000
#*# 	-0.342500, -0.187500, -0.037500, 0.040000, 0.012500, -0.097500, -0.270000
#*# 	-0.320000, -0.160000, -0.040000, 0.032500, 0.027500, -0.077500, -0.247500
#*# 	-0.272500, -0.145000, -0.037500, 0.022500, 0.020000, -0.082500, -0.252500
#*# 	-0.270000, -0.157500, -0.077500, -0.042500, -0.040000, -0.115000, -0.255000
#*# 	-0.292500, -0.207500, -0.135000, -0.105000, -0.085000, -0.140000, -0.235000
#*# tension = 0.2
#*# min_x = 22.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 22.0
#*# x_count = 7
#*# max_y = 314.97999999999996
#*# mesh_x_pps = 2
#*# max_x = 289.96
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.938
#*# pid_ki = 1.386
#*# pid_kd = 933.393
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.489
#*# pid_ki = 1.870
#*# pid_kd = 101.020
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 82.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 38.6
